{"version":3,"sources":["components/images/logo.png","constants/AuthStatus.js","components/login/login.js","contexts/AppContext.js","components/register/register.js","components/dashboard/dashboard.js","components/games/games.js","components/about/about.js","components/help/help.js","components/profile/profile.js","components/routes/PrivateRoute.js","components/header/header.js","App.js","reportWebVitals.js","index.js"],"names":["NOT_LOGGED_IN","LOG_IN_FORM","SIGN_UP_FORM","LOGGED_IN","Login","alert","useAlert","appContext","useContext","AppContext","history","useHistory","userEmail","userName","userPassword","handleUserEmail","handleUserPassword","login","checkDetails","errorMessage","loginStatus","useState","hidePassword","setHidePassword","loginMsg","statusMsg","show","className","push","id","src","logo","alt","htmlFor","type","name","value","onChange","onKeyDown","event","key","onClick","href","to","loggedIn_key","React","createContext","AppProvider","props","hostName","process","authStatus","setAuthStatus","setErrorMessage","userId","setUserId","setUserName","userNameInput","setUserNameInput","setUserEmail","setUserPassword","setLoginStatus","Provider","changeAuthStatusLogin","changeAuthStatusSignup","handleUserNameInput","changeEvent","updatedUserName","target","updatedUserEmail","updatedUserPassword","signup","axios","defaults","withCredentials","get","then","response","post","email","password","data","error","errors","message","localStorage","setItem","console","log","logout","removeItem","isLogin","getItem","children","Register","Dashboard","Component","Games","About","Help","Profile","PrivateRoute","component","rest","render","Header","showNotLoggedIn","showLoggedIn","path","exact","options","position","positions","TOP_CENTER","timeout","offset","types","ERROR","transition","transitions","SCALE","App","template","AlertTemplate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1699eed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.af547770.png\";","export const NOT_LOGGED_IN = \"not logged in\";\r\nexport const LOG_IN_FORM = \"log in form\";\r\nexport const SIGN_UP_FORM = \"sign up form\";\r\nexport const LOGGED_IN = \"logged_in\";","import React, { useContext, useState } from \"react\";\r\nimport './login.css';\r\nimport logo from '../images/logo.png';\r\n\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\n\r\nimport { useAlert } from 'react-alert'\r\n\r\nimport {Link, useHistory} from \"react-router-dom\";\r\n\r\n// export default class Login extends React.Component{\r\n\r\n/**\r\n * Component for showing login page\r\n * @component\r\n * @example\r\n * \r\n * return (\r\n *  <Login/>\r\n * )\r\n * \r\n */\r\n\r\n\r\n    const Login = () => {\r\n        \r\n    const alert = useAlert();\r\n    const appContext = useContext(AppContext);\r\n    const history = useHistory();\r\n    let {\r\n        userName,\r\n        userEmail,\r\n        userPassword,\r\n        handleUserEmail,\r\n        handleUserPassword,\r\n        login,\r\n        checkDetails,\r\n        errorMessage,\r\n        loginStatus,\r\n    } = appContext;\r\n\r\n    const [hidePassword, setHidePassword] = useState(true);\r\n    const showHiddenPassword = hidePassword ? \"\" : \"hidden\";\r\n    const showRevealedPassword = hidePassword ? \"hidden\" : \"\";\r\n    function togglePassword() {\r\n    setHidePassword(!hidePassword);\r\n    }\r\n\r\n\r\n    function loginMsg(){\r\n        login(function (statusMsg){\r\n            alert.show(<div className=\"text-sm\">{statusMsg}</div>)\r\n            return history.push(\"/profile\");\r\n            })\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === 'Enter') {\r\n            loginMsg();\r\n        }\r\n    }\r\n\r\n\r\n    // render(){\r\n        return(\r\n            <div className=\"page\">\r\n                <div id=\"loginArea\">\r\n                    <div id=\"headingArea\">\r\n                        <img src={logo} alt=\"Logo\"/>\r\n                        <span>Log In</span>\r\n                    </div>\r\n                    <div id=\"inputArea\">\r\n                        {/* EMAIL */}\r\n                        <label htmlFor=\"email\" \r\n                            className=\"emailContent\">\r\n                                Email\r\n                            <p className=\"required\">\r\n                                    *\r\n                            </p>\r\n                        </label>\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"email\" \r\n                            id=\"emailInput\" \r\n                            value={userEmail} \r\n                            onChange={handleUserEmail}\r\n                        />\r\n                        {/* PASSWORD */}\r\n                        <label htmlFor=\"password\" \r\n                        className=\"passwordContent\">\r\n                            Password\r\n                            <p className=\"required\">\r\n                                *\r\n                            </p>\r\n                        </label>\r\n                        <div className=\"loginPasswordSpan\">\r\n                            <input \r\n                            type={(hidePassword) ? \"password\":\"text\"} \r\n                            name=\"password\" \r\n                            id=\"passwordInput\"\r\n                            value={userPassword}\r\n                            onChange={handleUserPassword}\r\n                            onKeyDown={handleKeyDown}>\r\n                            </input>\r\n                            <div className=\"showPassword\" onClick={() => togglePassword()}>Show</div>\r\n                        </div>\r\n                        <a href=\".\" className=\"forgotPassword\">Forgot password?</a>\r\n                        <button onClick={() => loginMsg()}>Log In</button>\r\n                        <span>New to ESPFinder?<Link to=\"/register\" className=\"joinNow\"> Join now</Link></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    // }\r\n}\r\n\r\n\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  NOT_LOGGED_IN,\r\n  LOG_IN_FORM,\r\n  SIGN_UP_FORM,\r\n  LOGGED_IN,\r\n} from \"../constants/AuthStatus\";\r\n\r\nimport { loginMsg } from '../components/login/login.js';\r\n\r\nconst loggedIn_key = 'loggedin';\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = (props) => {\r\n    let hostName = process.env.REACT_APP_API_URL\r\n\r\n  const [authStatus, setAuthStatus] = useState(NOT_LOGGED_IN);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [userId, setUserId] = useState(0);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [userNameInput, setUserNameInput] = useState(\"\");\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [userPassword, setUserPassword] = useState(\"\");\r\n  const [loginStatus, setLoginStatus] = useState(\"\");\r\n\r\n  /**\r\n   * @function isLogin\r\n   * @description Changes the login status of user\r\n   * \r\n   * \r\n   */\r\n  function isLogin(){\r\n    if(localStorage.getItem(loggedIn_key)){\r\n      setLoginStatus(true);\r\n    }else{\r\n      setLoginStatus(false);\r\n    }\r\n  }\r\n\r\n  function changeAuthStatusLogin() {\r\n    setAuthStatus(LOG_IN_FORM);\r\n  }\r\n\r\n  function changeAuthStatusSignup() {\r\n    setAuthStatus(SIGN_UP_FORM);\r\n  }\r\n\r\n  function handleUserNameInput(changeEvent) {\r\n    let updatedUserName = changeEvent.target.value;\r\n    setUserNameInput(updatedUserName);\r\n  }\r\n\r\n  function handleUserEmail(changeEvent) {\r\n    let updatedUserEmail = changeEvent.target.value;\r\n    setUserEmail(updatedUserEmail);\r\n  }\r\n\r\n  function handleUserPassword(changeEvent) {\r\n    let updatedUserPassword = changeEvent.target.value;\r\n    setUserPassword(updatedUserPassword);\r\n  }\r\n\r\n  const signup = (statusMsg) => {\r\n    axios.defaults.withCredentials = true;\r\n    // CSRF COOKIE\r\n    axios.get(hostName + \"api/sanctum/csrf-cookie\").then(\r\n      (response) => {\r\n        //console.log(response);\r\n        // SIGNUP / REGISTER\r\n        axios\r\n          .post(hostName + \"api/register\", {\r\n            name: userNameInput,\r\n            email: userEmail,\r\n            password: userPassword,\r\n          })\r\n          .then(\r\n            (response) => {\r\n              //console.log(response);\r\n              // GET USER\r\n              axios.get(hostName + \"api/user\").then(\r\n                (response) => {\r\n                  //console.log(response);\r\n                  setUserId(response.data.id);\r\n                  setUserName(response.data.name);\r\n                  setErrorMessage(\"\");\r\n                  setAuthStatus(LOGGED_IN);\r\n                  setLoginStatus(true);\r\n                  statusMsg(\"Successful Sign Up\")\r\n                },\r\n                // GET USER ERROR\r\n                (error) => {\r\n                  setErrorMessage(\"Could not complete the sign up\");\r\n                  statusMsg(\"Could not complete the sign up\")\r\n                }\r\n              );\r\n            },\r\n            // SIGNUP ERROR\r\n            (error) => {\r\n              if (error.response.data.errors.name) {\r\n                setErrorMessage(error.response.data.errors.name[0]);\r\n                statusMsg(error.response.data.errors.name[0]);\r\n              } else if (error.response.data.errors.email) {\r\n                setErrorMessage(error.response.data.errors.email[0]);\r\n                statusMsg(error.response.data.errors.email[0]);\r\n              } else if (error.response.data.errors.password) {\r\n                setErrorMessage(error.response.data.errors.password[0]);\r\n                statusMsg(error.response.data.errors.password[0]);\r\n              } else if (error.response.data.message) {\r\n                setErrorMessage(error.response.data.message);\r\n                statusMsg(error.response.data.message);\r\n              } else {\r\n                setErrorMessage(\"Could not complete the sign up\");\r\n                statusMsg(\"Could not complete the sign up\");\r\n              }\r\n            }\r\n          );\r\n      },\r\n      // COOKIE ERROR\r\n      (error) => {\r\n        setErrorMessage(\"Could not complete the sign up\");\r\n        statusMsg(\"Could not complete the sign up\");\r\n      }\r\n    );\r\n  };\r\n\r\n  const login = (statusMsg) => {\r\n    axios.defaults.withCredentials = true;\r\n    // CSRF COOKIE\r\n    axios.get(hostName + \"api/sanctum/csrf-cookie\").then(\r\n      (response) => {\r\n        //console.log(response);\r\n        // LOGIN\r\n        axios\r\n          .post(hostName + \"api/login\", {\r\n            email: userEmail,\r\n            password: userPassword,\r\n          })\r\n          .then(\r\n            (response) => {\r\n              //console.log(response);\r\n              // GET USER\r\n              axios.get(hostName + \"api/user\").then(\r\n                (response) => {\r\n                  //console.log(response);\r\n                  setUserId(response.data.id);\r\n                  setUserName(response.data.name);\r\n                  setErrorMessage(\"\");\r\n                  setAuthStatus(LOGGED_IN);\r\n                  localStorage.setItem(loggedIn_key, 'LoggedIn')\r\n                  setLoginStatus(true);\r\n                  statusMsg(\"Successful Login\");\r\n                },\r\n                // GET USER ERROR\r\n                (error) => {\r\n                  setErrorMessage(\"Could not complete the login\");\r\n                }\r\n              );\r\n            },\r\n            // LOGIN ERROR\r\n            (error) => {\r\n              if (error.response) {\r\n                setErrorMessage(error.response.data.message);\r\n                statusMsg(error.response.data.message)\r\n              } else {\r\n                setErrorMessage(\"Could not complete the login\");\r\n                statusMsg(\"Could not complete the login\")\r\n              }\r\n            }\r\n          );\r\n      },\r\n      // COOKIE ERROR\r\n      (error) => {\r\n        setErrorMessage(\"Could not complete the login\");\r\n        statusMsg(\"Could not complete the login\");\r\n      }\r\n    );\r\n  };\r\n\r\n  function logout() {\r\n    axios.defaults.withCredentials = true;\r\n    axios.get(hostName + \"api/logout\");\r\n    setUserId(0);\r\n    setUserName(\"\");\r\n    setUserNameInput(\"\");\r\n    setUserEmail(\"\");\r\n    setUserPassword(\"\");\r\n    setAuthStatus(NOT_LOGGED_IN);\r\n    localStorage.removeItem(loggedIn_key);\r\n    setLoginStatus(false);\r\n  }\r\n    \r\n    \r\n  const checkDetails = () => {\r\n    axios.defaults.withCredentials = true;\r\n        // GET USER\r\n        axios.get(hostName + \"api/user\").then(\r\n            (response) => {\r\n                console.log(response);\r\n                setUserId(response.data.id);\r\n                setUserName(response.data.name);\r\n                setErrorMessage(\"\");\r\n            },\r\n            // GET USER ERROR\r\n            (error) => {\r\n                setErrorMessage(\"Could not complete the login\");\r\n            }\r\n        );\r\n  };\r\n\r\n\r\n  \r\n  return (\r\n    <AppContext.Provider\r\n    value={{\r\n      authStatus,\r\n      changeAuthStatusLogin,\r\n        changeAuthStatusSignup,\r\n        userId,\r\n        userName,\r\n        userNameInput,\r\n        userEmail,\r\n        userPassword,\r\n        loginStatus,\r\n        setLoginStatus,\r\n        handleUserNameInput,\r\n        handleUserEmail,\r\n        handleUserPassword,\r\n        signup,\r\n        login,\r\n        checkDetails,\r\n        logout,\r\n        errorMessage,\r\n        isLogin,\r\n      }}\r\n      >\r\n      {props.children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\n","import React, { useContext, useState } from \"react\";\r\nimport './register.css';\r\nimport logo from '../images/logo.png';\r\n\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport { useAlert } from 'react-alert'\r\n\r\nimport {Link , useHistory} from \"react-router-dom\";\r\n\r\n// export default class Register extends React.Component{\r\n    const Register = () => {\r\n    const alert = useAlert();\r\n    const history = useHistory();\r\n\r\n    const appContext = useContext(AppContext);\r\n    const {\r\n        userNameInput,\r\n        userEmail,\r\n        userPassword,\r\n        handleUserNameInput,\r\n        handleUserEmail,\r\n        handleUserPassword,\r\n        signup,\r\n        errorMessage,\r\n        checkDetails,\r\n    } = appContext;\r\n    \r\n\r\n    const [hidePassword, setHidePassword] = useState(true);\r\n    const showHiddenPassword = hidePassword ? \"\" : \"hidden\";\r\n    const showRevealedPassword = hidePassword ? \"hidden\" : \"\";\r\n    function togglePassword() {\r\n    setHidePassword(!hidePassword);\r\n    }\r\n\r\n    function signupMsg(){\r\n        signup(function (statusMsg){\r\n            console.log(statusMsg);\r\n            alert.show(<div className=\"text-sm\">{statusMsg}</div>)\r\n            if(statusMsg == \"Successful Sign Up\"){\r\n                return history.push(\"/profile\");\r\n            }\r\n        })\r\n    }\r\n    // render(){\r\n        return(\r\n                <div className=\"page\">\r\n                    <div id=\"registerArea\">\r\n                        <div id=\"headingArea\">\r\n                            <img src={logo} alt=\"Logo\"/>\r\n                            <span>Register</span>\r\n                        </div>\r\n                        <div id=\"inputArea\">\r\n                            <label \r\n                                htmlFor=\"username\" \r\n                                className=\"registerUsernameText\">\r\n                                    Username\r\n                                    <p className=\"required\">\r\n                                        *\r\n                                    </p>\r\n                            </label>\r\n                            <input \r\n                            type=\"text\" \r\n                            name=\"username\" \r\n                            id=\"registerUsernameInput\"\r\n                            value={userNameInput}\r\n                            onChange={handleUserNameInput}\r\n                            />\r\n                            <label \r\n                                htmlFor=\"email\" \r\n                                className=\"registerEmailText\">\r\n                                    Email\r\n                                    <p className=\"required\">\r\n                                        *\r\n                                    </p>\r\n                            </label>\r\n                            <input \r\n                            type=\"text\" \r\n                            name=\"email\" \r\n                            id=\"registerEmailInput\"\r\n                            value={userEmail}\r\n                            onChange={handleUserEmail}\r\n                            />\r\n                            <label \r\n                                htmlFor=\"password\" \r\n                                className=\"registerPasswordText\">\r\n                                    Password\r\n                                    <p className=\"required\">\r\n                                        *\r\n                                    </p>\r\n                            </label>\r\n                            <div className=\"registerPasswordSpan\">\r\n                                <input \r\n                                type={(hidePassword) ? \"password\":\"text\"} \r\n                                name=\"password\" \r\n                                id=\"registerPasswordInput\"\r\n                                value={userPassword}\r\n                                onChange={handleUserPassword}>\r\n                                </input>\r\n                                <div className=\"showPassword\" onClick={() => togglePassword()}>Show</div>\r\n                            </div>\r\n                            <p className=\"agreement\">By clicking Agree & Join, you agree to our User Agreement, Privacy Policy, and Cookie Policy.</p>\r\n                            <button onClick={() => signupMsg()}>Agree & Join</button>\r\n                            <span>Already on ESPFinder? <Link to=\"/login\" className=\"sign-in\">Log in</Link></span>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n        )\r\n    // }\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport './dashboard.css';\r\n\r\nexport default class Dashboard extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n\r\n                <div>dashboard</div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './games.css';\r\n\r\n\r\nexport default class Games extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div>games</div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './about.css';\r\n\r\n\r\nexport default class About extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div>about</div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './help.css';\r\n\r\n\r\nexport default class Help extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div>help</div>\r\n            </div>\r\n        )\r\n    }\r\n}","import {React, useContext} from 'react';\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\n\r\n\r\nconst Profile = () => {\r\n    const appContext = useContext(AppContext);\r\n    const {\r\n        userName\r\n    } = appContext;\r\n\r\n\r\n    return(\r\n        <div>\r\n            <div>Profile Page</div>\r\n            <span>Welcome {userName}</span>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default Profile;","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\n\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    const appContext = useContext(AppContext);\r\n        const { loginStatus } = appContext;\r\n    return (\r\n\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        <Route {...rest} render={props => (\r\n            loginStatus ?\r\n                <Component {...props} />\r\n            : <Redirect to=\"/login\" />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import './header.css';\r\nimport logo from '../images/logo.png';\r\nimport React, { useContext } from \"react\";\r\n\r\nimport {\r\n  NOT_LOGGED_IN,\r\n  LOG_IN_FORM,\r\n  SIGN_UP_FORM,\r\n  LOGGED_IN,\r\n} from \"../../constants/AuthStatus\";\r\n\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\n\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport LoginPage from '../login/login.js';\r\nimport RegisterPage from '../register/register.js';\r\nimport Dashboard from '../dashboard/dashboard.js';\r\nimport Games from '../games/games.js';\r\nimport About from '../about/about.js';\r\nimport Help from '../help/help.js';\r\nimport Profile from '../profile/profile.js';\r\n\r\nimport PrivateRoute from '../routes/PrivateRoute.js';\r\n// export default class header extends React.Component {\r\n    const Header = () => {\r\n        const appContext = useContext(AppContext);\r\n        const { \r\n            userName, \r\n            logout, \r\n            checkDetails, \r\n            authStatus,\r\n            loginStatus,\r\n            } \r\n            = appContext;\r\n        const showNotLoggedIn = authStatus === NOT_LOGGED_IN ? \"\" : \"hidden\";\r\n        const showLoggedIn = authStatus === LOGGED_IN ? \"\" : \"hidden\";\r\n\r\n    function logthis(){\r\n        console.log(loginStatus);\r\n        console.log(authStatus);\r\n    }\r\n\r\n\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         active: true,\r\n    //         class: \" \",\r\n    //     };\r\n    //     this.toggleActiveClass = this.toggleActiveClass.bind(this);\r\n    // }\r\n    \r\n    // toggleActiveClass(){\r\n    //     const currentState = this.state.active;\r\n    //     this.setState({active: !currentState});\r\n    //     this.setState({class: this.state.active ? \"active\" : \" \"})\r\n    // }\r\n    \r\n    // loggedIn(){\r\n        //     const loginButtons = document.querySelectorAll('.notLoggedIn');\r\n        //     for(const button of loginButtons){\r\n            //         button.style.display = 'none';\r\n            //     }\r\n            //     const profile = document.querySelector('.loggedIn')\r\n            //     profile.style.display = 'block'\r\n            // };\r\n            \r\n            \r\n            \r\n    \r\n        // render() {\r\n        \r\n        return (\r\n            <Router>\r\n        \r\n            <header className=\"header\">\r\n                <Link to=\"/\" className=\"logo\"><img alt=\"logo\" src={logo} id=\"logo\"></img></Link>\r\n                <div className=\"navArea\">\r\n                    <Link to=\"/\" className=\"navButton active hidden\" >Dashboard</Link>\r\n                    <Link to=\"/games\" className=\"navButton\">Games</Link>\r\n                    <Link to=\"/about\" className=\"navButton\">About</Link>\r\n                    <Link to=\"/help\" className= \"navButton\">Help</Link>\r\n                </div>\r\n                <div className=\"userArea\">\r\n                    <div onClick={logthis}>log</div>\r\n                    <Link to=\"/login\" className={`loginButton topRight ${showNotLoggedIn}`}>Login</Link>\r\n                    <Link to=\"/register\" className={`registerButton topRight ${showNotLoggedIn}`}>Register</Link>\r\n                    <Link to=\"/profile\" className={`profileButton topRight ${showLoggedIn}`}>{userName}</Link>\r\n                    <Link to=\"/\" onClick={logout} className={`logoutButton topRight ${showLoggedIn}`}>Log out</Link>\r\n                </div>\r\n            </header>\r\n\r\n            <Switch>\r\n                <Route path=\"/games\" component={Games}></Route>\r\n                <Route path=\"/about\"><About/></Route>\r\n                <Route path=\"/help\"><Help/></Route>\r\n\r\n                <Route path=\"/login\"><LoginPage/></Route>\r\n                <Route path=\"/register\"><RegisterPage/></Route>\r\n                \r\n                <PrivateRoute component={Profile} path=\"/profile\" exact/>\r\n\r\n                <Route path=\"/\"><Dashboard/></Route>\r\n            </Switch>\r\n\r\n        </Router>\r\n    )\r\n// }\r\n}\r\n\r\n// {loggedIn ? <Redirect to=\"/\" /> : <LoginPage />}\r\nexport default Header;","import React from 'react';\r\nimport AlertTemplate from 'react-alert-template-basic'\r\nimport { transitions, positions, Provider as AlertProvider, types } from 'react-alert'\r\n\r\n// import './App.css';\r\nimport \"./css/tailwind.css\"\r\n\r\n\r\nimport Header from './components/header/header.js'\r\n\r\nimport { AppProvider } from \"./contexts/AppContext\"\r\nimport AuthContainer from \"./components/auth/AuthContainer\"\r\n\r\nconst options = {\r\n  // you can also just use 'bottom center'\r\n  position: positions.TOP_CENTER,\r\n  timeout: 3500,\r\n  offset: '70px',\r\n  type: types.ERROR,\r\n  // you can also just use 'scale'\r\n  transition: transitions.SCALE\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <AlertProvider template={AlertTemplate} {...options}>\r\n      <AppProvider>\r\n          <Header/>\r\n          {/* <AuthContainer/> */}\r\n      </AppProvider>\r\n    </AlertProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}